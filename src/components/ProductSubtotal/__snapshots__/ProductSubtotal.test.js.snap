// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductSubtotal matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProductSubtotal
    price={
      Object {
        "installmentValue": 500,
        "installments": 5,
        "value": 2500,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <span>
          5
          x R$
           
          <span>
            500,00
          </span>
        </span>,
        <span>
          <br />
          ou 
          <span>
            R$ 
            2.500,00
          </span>
           à vista
        </span>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            5,
            "x R$",
            " ",
            <span>
              500,00
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          5,
          "x R$",
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "500,00",
            },
            "ref": null,
            "rendered": "500,00",
            "type": "span",
          },
        ],
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <br />,
            "ou ",
            <span>
              R$ 
              2.500,00
            </span>,
            " à vista",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          "ou ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "R$ ",
                "2.500,00",
              ],
            },
            "ref": null,
            "rendered": Array [
              "R$ ",
              "2.500,00",
            ],
            "type": "span",
          },
          " à vista",
        ],
        "type": "span",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
  > span:first-child {
    font-size: 22px;
    font-weight: 600;
    line-height: 35px;
    color: ",
          "#22B14C",
          ";

    > span {
      font-size: 32px;
    }
  }

  > span:last-child {
    > span {
      color: ",
          "#22B14C",
          ";
      font-weight: 600;
    }
  }
",
        ],
      },
      "displayName": "styled.div",
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <span>
            5
            x R$
             
            <span>
              500,00
            </span>
          </span>,
          <span>
            <br />
            ou 
            <span>
              R$ 
              2.500,00
            </span>
             à vista
          </span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              5,
              "x R$",
              " ",
              <span>
                500,00
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            5,
            "x R$",
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "500,00",
              },
              "ref": null,
              "rendered": "500,00",
              "type": "span",
            },
          ],
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <br />,
              "ou ",
              <span>
                R$ 
                2.500,00
              </span>,
              " à vista",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            "ou ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "R$ ",
                  "2.500,00",
                ],
              },
              "ref": null,
              "rendered": Array [
                "R$ ",
                "2.500,00",
              ],
              "type": "span",
            },
            " à vista",
          ],
          "type": "span",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
  > span:first-child {
    font-size: 22px;
    font-weight: 600;
    line-height: 35px;
    color: ",
            "#22B14C",
            ";

    > span {
      font-size: 32px;
    }
  }

  > span:last-child {
    > span {
      color: ",
            "#22B14C",
            ";
      font-weight: 600;
    }
  }
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
